// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// BS_call_price
double BS_call_price(double S0, double K, double tau, double sigma, double r);
RcppExport SEXP rBergomi_BS_call_price(SEXP S0SEXP, SEXP KSEXP, SEXP tauSEXP, SEXP sigmaSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type S0(S0SEXP);
    Rcpp::traits::input_parameter< double >::type K(KSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(BS_call_price(S0, K, tau, sigma, r));
    return rcpp_result_gen;
END_RCPP
}
// BS_put_price
double BS_put_price(double S0, double K, double tau, double sigma, double r);
RcppExport SEXP rBergomi_BS_put_price(SEXP S0SEXP, SEXP KSEXP, SEXP tauSEXP, SEXP sigmaSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type S0(S0SEXP);
    Rcpp::traits::input_parameter< double >::type K(KSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(BS_put_price(S0, K, tau, sigma, r));
    return rcpp_result_gen;
END_RCPP
}
// IV_call
double IV_call(double price, double S0, double K, double tau, double r);
RcppExport SEXP rBergomi_IV_call(SEXP priceSEXP, SEXP S0SEXP, SEXP KSEXP, SEXP tauSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type price(priceSEXP);
    Rcpp::traits::input_parameter< double >::type S0(S0SEXP);
    Rcpp::traits::input_parameter< double >::type K(KSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(IV_call(price, S0, K, tau, r));
    return rcpp_result_gen;
END_RCPP
}
// IV_put
double IV_put(double price, double S0, double K, double tau, double r);
RcppExport SEXP rBergomi_IV_put(SEXP priceSEXP, SEXP S0SEXP, SEXP KSEXP, SEXP tauSEXP, SEXP rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type price(priceSEXP);
    Rcpp::traits::input_parameter< double >::type S0(S0SEXP);
    Rcpp::traits::input_parameter< double >::type K(KSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< double >::type r(rSEXP);
    rcpp_result_gen = Rcpp::wrap(IV_put(price, S0, K, tau, r));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_hello_world
List rcpp_hello_world();
RcppExport SEXP rBergomi_rcpp_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpp_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// stupid_plus
double stupid_plus(double a, double b);
RcppExport SEXP rBergomi_stupid_plus(SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(stupid_plus(a, b));
    return rcpp_result_gen;
END_RCPP
}
// stupid_one
double stupid_one();
RcppExport SEXP rBergomi_stupid_one() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(stupid_one());
    return rcpp_result_gen;
END_RCPP
}
// stupid_two
List stupid_two();
RcppExport SEXP rBergomi_stupid_two() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(stupid_two());
    return rcpp_result_gen;
END_RCPP
}
// Phi
double Phi(double value);
RcppExport SEXP rBergomi_Phi(SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type value(valueSEXP);
    rcpp_result_gen = Rcpp::wrap(Phi(value));
    return rcpp_result_gen;
END_RCPP
}
// computeIV
DataFrame computeIV(double xi, NumericVector H, NumericVector eta, NumericVector rho, NumericVector T, NumericVector K, int N, long M, IntegerVector seed, int num_threads);
RcppExport SEXP rBergomi_computeIV(SEXP xiSEXP, SEXP HSEXP, SEXP etaSEXP, SEXP rhoSEXP, SEXP TSEXP, SEXP KSEXP, SEXP NSEXP, SEXP MSEXP, SEXP seedSEXP, SEXP num_threadsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type H(HSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type T(TSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< long >::type M(MSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< int >::type num_threads(num_threadsSEXP);
    rcpp_result_gen = Rcpp::wrap(computeIV(xi, H, eta, rho, T, K, N, M, seed, num_threads));
    return rcpp_result_gen;
END_RCPP
}
